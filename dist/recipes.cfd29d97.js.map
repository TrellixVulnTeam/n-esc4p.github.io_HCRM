{"mappings":"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","sources":["root/src/js/config.js","root/src/js/helpers.js","root/src/js/model.js","root/src/js/views/View.js","root/src/js/views/recipeView.js","root/src/js/views/searchView.js","root/src/js/views/resultsView.js","root/src/js/views/paginationView.js","root/src/js/controller.js"],"sourcesContent":["export const API_URL = `https://forkify-api.herokuapp.com/api/v2/recipes/`;\r\nexport const TIMEOUT_SEC = 10;\r\nexport const RES_PER_PAGE = 15;","import { TIMEOUT_SEC } from \"./config.js\";\r\n\r\nconst timeout = function (s) {\r\n    return new Promise(function (_, reject) {\r\n      setTimeout(function() {\r\n        reject(new Error(`Request took too long! Timeout after ${s} seconds`));\r\n      },\r\n      s * 1000);\r\n    });\r\n};\r\n\r\nexport const getJSON = async function(url) {\r\n    try {\r\n        const res = await Promise.race([fetch(url), timeout(TIMEOUT_SEC)]);\r\n        const data = await res.json();\r\n\r\n        if (!res.ok) throw new Error(`${data.message} (${res.status})`);\r\n        return data;\r\n    }\r\n    catch(err) {\r\n        throw err;\r\n    }\r\n\r\n}","import { API_URL } from \"./config.js\";\r\nimport { getJSON } from \"./helpers.js\";\r\nimport { RES_PER_PAGE } from \"./config.js\";\r\n\r\nexport const state = {\r\n    recipe: {},\r\n    search: {\r\n        query: '',\r\n        results: [],\r\n        resultsPerPage: RES_PER_PAGE,\r\n        page: 1,\r\n    },\r\n};\r\n\r\nexport const loadRecipe = async function(id) {\r\n    try {\r\n        const data = await getJSON(`${API_URL}${id}`)\r\n\r\n        const {recipe} = data.data;\r\n        state.recipe = {\r\n            id: recipe.id,\r\n            title: recipe.title,\r\n            publisher: recipe.publisher,\r\n            sourceUrl: recipe.source_url,\r\n            imageUrl: recipe.image_url,\r\n            servings: recipe.servings,\r\n            cookingTime: recipe.cooking_time,\r\n            ingredients: recipe.ingredients\r\n        }\r\n        console.log(state.recipe);\r\n    }\r\n    catch (err) {\r\n        console.log(`${err} ✈🏢💥`);\r\n        throw err;\r\n    }\r\n}\r\n\r\nexport const loadSearchResults = async function(query) {\r\n    try {\r\n        state.search.query = query;\r\n        const data = await getJSON(`${API_URL}?search=${query}`);\r\n\r\n        state.search.results = data.data.recipes.map(rec => {\r\n            return {\r\n                id: rec.id,\r\n                title: rec.title,\r\n                publisher: rec.publisher,\r\n                sourceUrl: rec.source_url,\r\n                imageUrl: rec.image_url\r\n            }\r\n        });\r\n    }\r\n    catch (err) {\r\n        console.log(`${err} ✈🏢💥`);\r\n        throw err;\r\n    }\r\n}\r\n\r\nexport const getSearchResultsPage = function(page = state.search.page) {\r\n    state.search.page = page;\r\n\r\n    const start = (page - 1) * state.search.resultsPerPage; // 0;\r\n    const end = page * state.search.resultsPerPage; // 9;\r\n\r\n    return state.search.results.slice(start, end);\r\n}","// Loads Icons\r\nconst icons = new URL(\"src/img/icons.svg\", document.location.origin).href;\r\n\r\nexport default class View {\r\n    _data;\r\n    render(data) {\r\n        if (!data || (Array.isArray(data) && data.length === 0)) \r\n            return this.renderError();\r\n        \r\n        this._data = data;\r\n        const markup = this._generateMarkup();\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML('afterbegin', markup);\r\n    }\r\n\r\n    _clear() {\r\n        this._parentElement.innerHTML = '';\r\n    }\r\n\r\n    renderSpinner() {\r\n        const markup = `\r\n          <div class=\"spinner\">\r\n          <svg>\r\n            <use href=\"${icons}#icon-loader\"></use>\r\n          </svg>\r\n          </div>\r\n        `;\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n    }\r\n\r\n    renderError(msg = this._errorMessage) {\r\n        const markup = `\r\n        <div class=\"error\">\r\n            <div>\r\n              <svg>\r\n                <use href=\"${icons}#icon-alert-triangle\"></use>\r\n              </svg>\r\n            </div>\r\n            <p>${msg}</p>\r\n          </div>\r\n        `;\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n    }\r\n\r\n    renderMessage(msg = this._message) {\r\n        const markup = `\r\n        <div class=\"message\">\r\n            <div>\r\n              <svg>\r\n                <use href=\"${icons}#icon-smile\"></use>\r\n              </svg>\r\n            </div>\r\n            <p>${msg}</p>\r\n          </div>\r\n        `;\r\n        this._clear();\r\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n    }\r\n}","import View from \"./View.js\";\r\n\r\n// Loads Icons\r\nconst icons = new URL(\"src/img/icons.svg\", document.location.origin).href;\r\n\r\nclass RecipeView extends View {\r\n    _parentElement = document.querySelector('.recipe');\r\n    _errorMessage = `Nous n'avons pas trouvé cette recette. Veuillez essayer une autre!`;\r\n    _message = '';\r\n\r\n    addHandlerRender(handler) {\r\n        ['hashchange', 'load'].forEach(ev => window.addEventListener(ev, handler));\r\n    }\r\n\r\n    _generateMarkup() {\r\n        return `\r\n            <figure class=\"recipe__fig\">\r\n            <img src=\"${this._data.imageUrl}\" alt=\"Recipe Image\" class=\"recipe__img\" />\r\n            <h1 class=\"recipe__title\">\r\n                <span>${this._data.title}</span>\r\n            </h1>\r\n            </figure>\r\n            <div class=\"recipe__details\">\r\n            <div class=\"recipe__info\">\r\n                <svg class=\"recipe__info-icon\">\r\n                <use href=\"${icons}#icon-clock\"></use>\r\n                </svg>\r\n                <span class=\"recipe__info-data recipe__info-data--minutes\">${this._data.cookingTime}</span>\r\n                <span class=\"recipe__info-text\">minutes</span>\r\n            </div>\r\n            <div class=\"recipe__info\">\r\n                <svg class=\"recipe__info-icon\">\r\n                <use href=\"${icons}#icon-users\"></use>\r\n                </svg>\r\n                <span class=\"recipe__info-data recipe__info-data--people\">${this._data.servings}</span>\r\n                <span class=\"recipe__info-text\">PORTIONS</span>\r\n                <div class=\"recipe__info-buttons\">\r\n                <button class=\"btn--tiny btn--increase-servings\">\r\n                    <svg>\r\n                    <use href=\"${icons}#icon-minus-circle\"></use>\r\n                    </svg>\r\n                </button>\r\n                <button class=\"btn--tiny btn--increase-servings\">\r\n                    <svg>\r\n                    <use href=\"${icons}#icon-plus-circle\"></use>\r\n                    </svg>\r\n                </button>\r\n                </div>\r\n            </div>\r\n            <button class=\"btn--round\">\r\n                <svg class=\"\">\r\n                    <use href=\"${icons}#icon-bookmark-fill\"></use>\r\n                </svg>\r\n            </button>\r\n            </div>\r\n            <div class=\"recipe__ingredients\">\r\n            <h2 class=\"heading--2\">Ingrédients de la recette</h2>\r\n            <ul class=\"recipe__ingredient-list\">\r\n                ${this._data.ingredients.map(this._generateMarkupIngredient).join('')}\r\n            </div>\r\n            <div class=\"recipe__directions\">\r\n            <h2 class=\"heading--2\">Comment la préparer?</h2>\r\n            <p class=\"recipe__directions-text\">\r\n                Cette recette a été soigneusement conçue par\r\n                <span class=\"recipe__publisher\">${this._data.publisher}</span>. Veuillez consulter les instructions sur leur site Web.\r\n            </p>\r\n            <a\r\n                class=\"btn--small recipe__btn\"\r\n                href=\"${this._data.sourceUrl}\"\r\n                target=\"_blank\"\r\n            >\r\n                <span>Directions</span>\r\n                <svg class=\"search__icon\">\r\n                <use href=\"${icons}#icon-arrow-right\"></use>\r\n                </svg>\r\n            </a>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    _generateMarkupIngredient(ing) {\r\n        return `\r\n        <li class=\"recipe__ingredient\">\r\n            <svg class=\"recipe__icon\">\r\n                <use href=\"${icons}#icon-check\"></use>\r\n            </svg>\r\n        <div class=\"recipe__quantity\">${ing.quantity ? ing.quantity : ''}</div>\r\n        <div class=\"recipe__description\">\r\n        <span class=\"recipe__unit\">${ing.unit}</span>\r\n        ${ing.description}\r\n        </div>\r\n        </li>\r\n        `;\r\n    }\r\n}\r\n\r\nexport default new RecipeView();","class SearchView {\r\n    _parentElement = document.querySelector('.search-field');\r\n\r\n    getQuery() {\r\n        const query = this._parentElement.querySelector('.search-input').value;\r\n        console.log(query);\r\n        // Clear field after search\r\n        this._clearInput();\r\n        return query;\r\n    }\r\n\r\n    _clearInput() {\r\n        this._parentElement.querySelector('.search-input').value = '';\r\n    }\r\n\r\n    addHandlerSearch(handler) {\r\n        this._parentElement.addEventListener('submit', function(e) {\r\n            e.preventDefault();\r\n            handler();\r\n        })\r\n    }\r\n}\r\n\r\nexport default new SearchView();","import View from \"./View.js\";\r\n\r\n// Loads Icons\r\nconst icons = new URL(\"src/img/icons.svg\", document.location.origin).href;\r\n\r\nclass ResultsView extends View {\r\n    _parentElement = document.querySelector('.results');\r\n    _errorMessage = `Nous n'avons pas trouvé cette recette. Veuillez essayer une autre!`;\r\n    _message = '';\r\n\r\n    _generateMarkup() {\r\n        return this._data.map(this._generateMarkupPreview).join('')\r\n    }\r\n\r\n    _generateMarkupPreview(result) {\r\n        return `\r\n        <li class=\"preview\">\r\n            <a class=\"preview__link preview__link--active\" href=\"#${result.id}\">\r\n              <figure class=\"preview__fig\">\r\n                <img src=\"${result.imageUrl}\" alt=\"Test\" />\r\n              </figure>\r\n              <div class=\"preview__data\">\r\n                <h4 class=\"preview__title\">${result.title}</h4>\r\n                <p class=\"preview__publisher\">${result.publisher}</p>\r\n              </div>\r\n            </a>\r\n          </li>\r\n        `;\r\n    }\r\n}\r\n\r\nexport default new ResultsView();","import View from \"./View.js\";\r\n\r\n// Loads Icons\r\nconst icons = new URL(\"src/img/icons.svg\", document.location.origin).href;\r\n\r\nclass PaginationView extends View {\r\n    _parentElement = document.querySelector('.pagination');\r\n\r\n    addHandlerClick(handler) {\r\n        this._parentElement.addEventListener('click', function(e) {\r\n            const btn = e.target.closest('.btn--inline');\r\n            if (!btn) return;\r\n\r\n            const goToPage = +btn.dataset.goto;\r\n\r\n            handler(goToPage);\r\n        });\r\n    }\r\n\r\n    _generateMarkup() {\r\n        const currPage = this._data.page;\r\n        const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage);\r\n\r\n        // Page 1, and there are other pages\r\n        if (currPage === 1 && numPages > 1 && numPages > 1) {\r\n            return `\r\n            <button data-goto=\"${currPage + 1}\" class=\"btn--inline pagination__btn--next\">\r\n                <span>Page ${currPage + 1}</span>\r\n                <svg class=\"search__icon\">\r\n                    <use href=\"${icons}#icon-arrow-right\"></use>\r\n                </svg>\r\n            </button>\r\n            `;\r\n        }\r\n        \r\n        // Last page\r\n        if (currPage === numPages) {\r\n            return `\r\n                <button data-goto=\"${currPage - 1}\" class=\"btn--inline pagination__btn--prev\">\r\n                    <svg class=\"search__icon\">\r\n                    <use href=\"${icons}#icon-arrow-left\"></use>\r\n                    </svg>\r\n                    <span>Page ${currPage - 1}</span>\r\n                </button>\r\n            `;\r\n        }\r\n        // Other page\r\n        if (currPage < numPages) {\r\n            return `\r\n                <button data-goto=\"${currPage - 1}\" class=\"btn--inline pagination__btn--prev\">\r\n                    <svg class=\"search__icon\">\r\n                    <use href=\"${icons}#icon-arrow-left\"></use>\r\n                    </svg>\r\n                    <span>Page ${currPage - 1}</span>\r\n                </button>\r\n                <button data-goto=\"${currPage + 1}\" class=\"btn--inline pagination__btn--next\">\r\n                <span>Page ${currPage + 1}</span>\r\n                <svg class=\"search__icon\">\r\n                    <use href=\"${icons}#icon-arrow-right\"></use>\r\n                </svg>\r\n            </button>\r\n            `;\r\n        }\r\n\r\n        // Page 1, and there are NO other pages\r\n        return ''\r\n    }\r\n}\r\n\r\nexport default new PaginationView();","import * as model from \"./model.js\";\nimport recipeView from \"./views/recipeView.js\";\nimport searchView from \"./views/searchView.js\";\nimport resultsView from \"./views/resultsView.js\";\nimport paginationView from \"./views/paginationView.js\";\n\n\nconst controlRecipes = async function() {\n  try {\n    const id = window.location.hash.slice(1);\n    \n    if (!id) return;\n\n    // Loads Spinner\n    recipeView.renderSpinner();\n\n    // Loads Recipe\n    await model.loadRecipe(id);\n    \n    // Redering recipe\n    recipeView.render(model.state.recipe);\n    \n  }\n  catch (err) {\n    recipeView.renderError();\n  }\n}\n\nconst controlSearchResults = async function() {\n  try {\n    resultsView.renderSpinner();\n\n    // Get search query\n    const query = searchView.getQuery();\n    if(!query) return;\n\n    // Load search results\n    await model.loadSearchResults(query);\n\n    // Render search results\n    // resultsView.render(model.state.search.results);\n    resultsView.render(model.getSearchResultsPage(1));\n\n    // Render pagination buttons\n    paginationView.render(model.state.search);\n  }\n  catch (err) {\n    console.log(`${err} ✈🏢💥`);\n    throw err;\n  }\n}\n\nconst controlPagination = function(goToPage) {\n    // Render new search results\n    resultsView.render(model.getSearchResultsPage(goToPage));\n\n    // Render new pagination buttons\n    paginationView.render(model.state.search);\n}\n\nconst init = function() {\n  recipeView.addHandlerRender(controlRecipes);\n  searchView.addHandlerSearch(controlSearchResults);\n\n  paginationView.addHandlerClick(controlPagination);\n}\n\ninit();"],"names":["$067784676895df7f$export$d047a7c56db64af4","async","url","res","Promise","race","fetch","s","_","reject","setTimeout","Error","data","json","ok","message","status","err","$b88ef3d281df4960$export$ca000e230c0caa3e","recipe","search","query","results","resultsPerPage","page","$b88ef3d281df4960$export$8d7f79465139ab72","start","end","slice","$d60855834b4a26da$var$icons","URL","document","location","origin","href","$d60855834b4a26da$export$2e2bcd8739ae039","_data","render","Array","isArray","length","this","renderError","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","innerHTML","renderSpinner","msg","_errorMessage","$3f8b5c07cbfc2ff1$var$icons","querySelector","_message","addHandlerRender","handler","forEach","ev","window","addEventListener","imageUrl","title","$9ba97442f87f7bb6$export$2e2bcd8739ae039","getQuery","value","console","log","_clearInput","addHandlerSearch","e","preventDefault","map","_generateMarkupPreview","join","result","id","$f65155d3d08849a8$var$icons","addHandlerClick","btn","target","closest","goToPage","dataset","goto","currPage","numPages","Math","ceil","$3c9f09680b5acd12$var$controlRecipes","hash","$3f8b5c07cbfc2ff1$export$2e2bcd8739ae039","publisher","sourceUrl","source_url","image_url","servings","cookingTime","cooking_time","ingredients","$b88ef3d281df4960$export$b96725c7a035d60b","$3c9f09680b5acd12$var$controlSearchResults","$414b18fddf8ea7c1$export$2e2bcd8739ae039","recipes","rec","$b88ef3d281df4960$export$202b8e5cb363a0c4","$f65155d3d08849a8$export$2e2bcd8739ae039","$3c9f09680b5acd12$var$controlPagination"],"version":3,"file":"recipes.cfd29d97.js.map"}