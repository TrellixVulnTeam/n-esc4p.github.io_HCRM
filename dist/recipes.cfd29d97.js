const e=async function(e){try{const s=await Promise.race([fetch(e),(n=10,new Promise((function(e,s){setTimeout((function(){s(new Error(`Request took too long! Timeout after ${n} seconds`))}),1e3*n)})))]),r=await s.json();if(!s.ok)throw new Error(`${r.message} (${s.status})`);return r}catch(e){throw e}var n},n={recipe:{},search:{query:"",results:[],resultsPerPage:15,page:1}},s=function(e=n.search.page){n.search.page=e;const s=(e-1)*n.search.resultsPerPage,r=e*n.search.resultsPerPage;return n.search.results.slice(s,r)},r=new URL("src/img/icons.svg",document.location.origin).href;class t{_data;render(e){if(!e||Array.isArray(e)&&0===e.length)return this.renderError();this._data=e;const n=this._generateMarkup();this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",n)}_clear(){this._parentElement.innerHTML=""}renderSpinner(){const e=`\n          <div class="spinner">\n          <svg>\n            <use href="${r}#icon-loader"></use>\n          </svg>\n          </div>\n        `;this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",e)}renderError(e=this._errorMessage){const n=`\n        <div class="error">\n            <div>\n              <svg>\n                <use href="${r}#icon-alert-triangle"></use>\n              </svg>\n            </div>\n            <p>${e}</p>\n          </div>\n        `;this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",n)}renderMessage(e=this._message){const n=`\n        <div class="message">\n            <div>\n              <svg>\n                <use href="${r}#icon-smile"></use>\n              </svg>\n            </div>\n            <p>${e}</p>\n          </div>\n        `;this._clear(),this._parentElement.insertAdjacentHTML("afterbegin",n)}}const i=new URL("src/img/icons.svg",document.location.origin).href;var a=new class extends t{_parentElement=document.querySelector(".recipe");_errorMessage="Nous n'avons pas trouv√© cette recette. Veuillez essayer une autre!";_message="";addHandlerRender(e){["hashchange","load"].forEach((n=>window.addEventListener(n,e)))}_generateMarkup(){return`\n            <figure class="recipe__fig">\n            <img src="${this._data.imageUrl}" alt="Recipe Image" class="recipe__img" />\n            <h1 class="recipe__title">\n                <span>${this._data.title}</span>\n            </h1>\n            </figure>\n            <div class="recipe__details">\n            <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                <use href="${i}#icon-clock"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--minutes">${this._data.cookingTime}</span>\n                <span class="recipe__info-text">minutes</span>\n            </div>\n            <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                <use href="${i}#icon-users"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--people">${this._data.servings}</span>\n                <span class="recipe__info-text">PORTIONS</span>\n                <div class="recipe__info-buttons">\n                <button class="btn--tiny btn--increase-servings">\n                    <svg>\n                    <use href="${i}#icon-minus-circle"></use>\n                    </svg>\n                </button>\n                <button class="btn--tiny btn--increase-servings">\n                    <svg>\n                    <use href="${i}#icon-plus-circle"></use>\n                    </svg>\n                </button>\n                </div>\n            </div>\n            <button class="btn--round">\n                <svg class="">\n                    <use href="${i}#icon-bookmark-fill"></use>\n                </svg>\n            </button>\n            </div>\n            <div class="recipe__ingredients">\n            <h2 class="heading--2">Ingr√©dients de la recette</h2>\n            <ul class="recipe__ingredient-list">\n                ${this._data.ingredients.map(this._generateMarkupIngredient).join("")}\n            </div>\n            <div class="recipe__directions">\n            <h2 class="heading--2">Comment la pr√©parer?</h2>\n            <p class="recipe__directions-text">\n                Cette recette a √©t√© soigneusement con√ßue par\n                <span class="recipe__publisher">${this._data.publisher}</span>. Veuillez consulter les instructions sur leur site Web.\n            </p>\n            <a\n                class="btn--small recipe__btn"\n                href="${this._data.sourceUrl}"\n                target="_blank"\n            >\n                <span>Directions</span>\n                <svg class="search__icon">\n                <use href="${i}#icon-arrow-right"></use>\n                </svg>\n            </a>\n            </div>\n        `}_generateMarkupIngredient(e){return`\n        <li class="recipe__ingredient">\n            <svg class="recipe__icon">\n                <use href="${i}#icon-check"></use>\n            </svg>\n        <div class="recipe__quantity">${e.quantity?e.quantity:""}</div>\n        <div class="recipe__description">\n        <span class="recipe__unit">${e.unit}</span>\n        ${e.description}\n        </div>\n        </li>\n        `}};var c=new class{_parentElement=document.querySelector(".search-field");getQuery(){const e=this._parentElement.querySelector(".search-input").value;return console.log(e),this._clearInput(),e}_clearInput(){this._parentElement.querySelector(".search-input").value=""}addHandlerSearch(e){this._parentElement.addEventListener("submit",(function(n){n.preventDefault(),e()}))}};new URL("src/img/icons.svg",document.location.origin).href;var o=new class extends t{_parentElement=document.querySelector(".results");_errorMessage="Nous n'avons pas trouv√© cette recette. Veuillez essayer une autre!";_message="";_generateMarkup(){return this._data.map(this._generateMarkupPreview).join("")}_generateMarkupPreview(e){return`\n        <li class="preview">\n            <a class="preview__link preview__link--active" href="#${e.id}">\n              <figure class="preview__fig">\n                <img src="${e.imageUrl}" alt="Test" />\n              </figure>\n              <div class="preview__data">\n                <h4 class="preview__title">${e.title}</h4>\n                <p class="preview__publisher">${e.publisher}</p>\n              </div>\n            </a>\n          </li>\n        `}};const l=new URL("src/img/icons.svg",document.location.origin).href;var u=new class extends t{_parentElement=document.querySelector(".pagination");addHandlerClick(e){this._parentElement.addEventListener("click",(function(n){const s=n.target.closest(".btn--inline");if(!s)return;const r=+s.dataset.goto;e(r)}))}_generateMarkup(){const e=this._data.page,n=Math.ceil(this._data.results.length/this._data.resultsPerPage);return 1===e&&n>1&&n>1?`\n            <button data-goto="${e+1}" class="btn--inline pagination__btn--next">\n                <span>Page ${e+1}</span>\n                <svg class="search__icon">\n                    <use href="${l}#icon-arrow-right"></use>\n                </svg>\n            </button>\n            `:e===n?`\n                <button data-goto="${e-1}" class="btn--inline pagination__btn--prev">\n                    <svg class="search__icon">\n                    <use href="${l}#icon-arrow-left"></use>\n                    </svg>\n                    <span>Page ${e-1}</span>\n                </button>\n            `:e<n?`\n                <button data-goto="${e-1}" class="btn--inline pagination__btn--prev">\n                    <svg class="search__icon">\n                    <use href="${l}#icon-arrow-left"></use>\n                    </svg>\n                    <span>Page ${e-1}</span>\n                </button>\n                <button data-goto="${e+1}" class="btn--inline pagination__btn--next">\n                <span>Page ${e+1}</span>\n                <svg class="search__icon">\n                    <use href="${l}#icon-arrow-right"></use>\n                </svg>\n            </button>\n            `:""}};const p=async function(){try{const s=window.location.hash.slice(1);if(!s)return;a.renderSpinner(),await async function(s){try{const r=await e(`https://forkify-api.herokuapp.com/api/v2/recipes/${s}`),{recipe:t}=r.data;n.recipe={id:t.id,title:t.title,publisher:t.publisher,sourceUrl:t.source_url,imageUrl:t.image_url,servings:t.servings,cookingTime:t.cooking_time,ingredients:t.ingredients},console.log(n.recipe)}catch(e){throw console.log(`${e} ‚úàüè¢üí•`),e}}(s),a.render(n.recipe)}catch(e){a.renderError()}},d=async function(){try{o.renderSpinner();const r=c.getQuery();if(!r)return;await async function(s){try{n.search.query=s;const r=await e(`https://forkify-api.herokuapp.com/api/v2/recipes/?search=${s}`);n.search.results=r.data.recipes.map((e=>({id:e.id,title:e.title,publisher:e.publisher,sourceUrl:e.source_url,imageUrl:e.image_url})))}catch(e){throw console.log(`${e} ‚úàüè¢üí•`),e}}(r),o.render(s(1)),u.render(n.search)}catch(e){throw console.log(`${e} ‚úàüè¢üí•`),e}},g=function(e){o.render(s(e)),u.render(n.search)};a.addHandlerRender(p),c.addHandlerSearch(d),u.addHandlerClick(g);
//# sourceMappingURL=recipes.cfd29d97.js.map
